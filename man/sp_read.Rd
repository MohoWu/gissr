% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sp_read.R
\name{sp_read}
\alias{sp_read}
\title{Function to read spatial data files in a consistent way.}
\usage{
sp_read(file, layer = NULL, geom = NULL, lower = TRUE, verbose = TRUE)
}
\arguments{
\item{file}{Spatial data file name. For shapefiles and Mapinfo TAB files, a
file extension is optional.}

\item{layer}{Layer within \code{file} to read. Default is \code{NULL} and 
should not be needed for shapefiles, Mapinfo TAB files, and GeoJSON files. 
Default behavior for GPX files is to attempt to read the \code{"tracks"} 
layer.}

\item{geom}{An override for when spatial data files contain more than one 
geometry type which is commonly found in GeoJSON and KML files. \code{geom} 
can be one of: \code{"points"}, \code{"lines"}, or \code{"polygons"}.}

\item{lower}{Should the names of the data slot be forced to be lower case? 
Note that the default is \code{TRUE}.}

\item{verbose}{Should information about the data be printed when being 
loaded? Default is \code{TRUE}.}
}
\description{
\code{sp_read} is a wrapper for \code{rgdal::readOGR}, but its usage is the 
same as the other file readers in R. Unlike \code{rgdal::readOGR},
\code{sp_read} will expand file paths and make a "best-guess" on what layer 
is to be loaded for spatial data files.
}
\examples{
\dontrun{
# Load a shapefile without extension
sp_london <- sp_read("london_borough")

# Load a shapefile with an extension within home area
sp_london <- sp_read("~/Desktop/london_borough.shp")

# Load a gpx file, no need to define layer
sp_hira <- sp_read("~/Desktop/hira_mtb_park.gpx")

# Load GeoJSON file
sp_thames_locks <- sp_read("thames_locks.json", verbose = FALSE)

# Load mapinfo file
sp_coastline <- sp_read("nz-land-districts.map", verbose = FALSE)

}

}
\author{
Stuart K. Grange
}
\seealso{
\code{\link{readOGR}}, \code{\link{ogrInfo}}, \code{\link{ogrDrivers}}
}

